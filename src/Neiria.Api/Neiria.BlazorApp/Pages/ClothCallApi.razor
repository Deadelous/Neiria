@page "/callclothapi"
@using System.Text.Json
@using Neiria.Domain.Models
@using Neiria.BlazorApp.Data.Services
@inject IClothService  _clothService


<h3>Different Cloth Items in Neiria E-Commerce Shop</h3>

@if (clothesData == null)
{
    <p>Unable to get data from API. Please try again later.</p>
}

else
{
<div>
    <a href="@($"createcloth")" class="btn btn-primary m-1">Add new Cloth</a>
    <br />
    <br />
</div>
    <div>
        <input class="border-4 w-1/3 rounded m-6 p-6 h-8
               border-blue-300" @bind-value="searchTerm"
               @bind-value:event="oninput" placeholder="Search by Name" />
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Cloth Name</th>
                <th>Cloth BrandName</th>
                <th>Price</th>
                <th>Description</th>
            </tr>
        </thead>
        
        <tbody>
            @foreach (var cloth in Filter)
            {
            <tr>
                <td>@cloth.Name</td>
                <td>@cloth.BrandName.</td>
                <td>@cloth.Price</td>
                <td>@cloth.Description</td>
                <td><a href="@($"clothpage/{cloth.Guid}")" class="btn btn-primary m-1">View</a></td>
            </tr>
            }
        </tbody>
    </table>
}


@code {

    public string searchTerm = "";

    private IEnumerable<Cloth> clothesData = Array.Empty<Cloth>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        clothesData = await _clothService.GetAllClothes();

    }

    private IEnumerable<Cloth> Filter => clothesData.Where(item => item.Name.ToLower().Contains(searchTerm.ToLower())).ToList();

}